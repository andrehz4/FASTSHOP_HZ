<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2rc1 (Python 3.8.1 on win32)" generated="20200517 02:28:39.010" rpa="false">
<suite id="s1" name="Tests" source="C:\ZUP_hz\tests">
<suite id="s1-s1" name="ZUP" source="C:\ZUP_hz\tests\ZUP.robot">
<kw name="Start Session" library="base" type="setup">
<kw name="Open Browser" library="SeleniumLibrary">
<doc>Opens a new browser instance to the optional ``url``.</doc>
<arguments>
<arg>about:blank</arg>
<arg>chrome</arg>
</arguments>
<msg timestamp="20200517 02:28:39.308" level="INFO">Opening browser 'chrome' to base url 'about:blank'.</msg>
<status status="PASS" starttime="20200517 02:28:39.308" endtime="20200517 02:28:40.438"></status>
</kw>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<doc>Sets the implicit wait value used by Selenium.</doc>
<arguments>
<arg>10</arg>
</arguments>
<status status="PASS" starttime="20200517 02:28:40.438" endtime="20200517 02:28:40.440"></status>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20200517 02:28:40.440" endtime="20200517 02:28:40.554"></status>
</kw>
<status status="PASS" starttime="20200517 02:28:39.308" endtime="20200517 02:28:40.554"></status>
</kw>
<test id="s1-s1-t1" name="TV LG 4k OLED77C9PSB">
<kw name="Busca, verificação e adição ao carrinho do item TV LG 4k OLED77C9PSB no site Megazine Luiza">
<arguments>
<arg>TV LG 4k OLED77C9PSB</arg>
</arguments>
<kw name="Dado que acesso e verifico que estou no site Magazine Luiza" library="setup_hz">
<kw name="Go To" library="SeleniumLibrary">
<doc>Navigates the current browser window to the provided ``url``.</doc>
<arguments>
<arg>${BASE_URL}</arg>
</arguments>
<msg timestamp="20200517 02:28:40.557" level="INFO">Opening url 'https://www.magazineluiza.com.br/'</msg>
<status status="PASS" starttime="20200517 02:28:40.556" endtime="20200517 02:28:42.364"></status>
</kw>
<kw name="Title Should Be" library="SeleniumLibrary">
<doc>Verifies that the current page title equals ``title``.</doc>
<arguments>
<arg>Magazine Luiza | Pra você é Magalu!</arg>
</arguments>
<msg timestamp="20200517 02:28:42.772" level="INFO">Page title is 'Magazine Luiza | Pra você é Magalu!'.</msg>
<status status="PASS" starttime="20200517 02:28:42.365" endtime="20200517 02:28:42.773"></status>
</kw>
<status status="PASS" starttime="20200517 02:28:40.556" endtime="20200517 02:28:42.773"></status>
</kw>
<kw name="Quando é preenchido o campo de busca ${busca_produto}, verifico se o mesmo é retornado na lista" library="setup_hz">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>${INPUT_BUSCA_PRODUTO}</arg>
</arguments>
<status status="PASS" starttime="20200517 02:28:42.774" endtime="20200517 02:28:43.468"></status>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<arguments>
<arg>${INPUT_BUSCA_PRODUTO}</arg>
<arg>${busca_produto}</arg>
</arguments>
<msg timestamp="20200517 02:28:43.468" level="INFO">Typing text 'TV LG 4k OLED77C9PSB' into text field 'id:inpHeaderSearch'.</msg>
<status status="PASS" starttime="20200517 02:28:43.468" endtime="20200517 02:28:44.481"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>${SPAN_LUPA_BUSCA_PRODUTO}</arg>
</arguments>
<msg timestamp="20200517 02:28:44.482" level="INFO">Clicking element 'id:btnHeaderSearch'.</msg>
<status status="PASS" starttime="20200517 02:28:44.482" endtime="20200517 02:28:45.556"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>${H2_NOME_DA_TV}</arg>
</arguments>
<status status="PASS" starttime="20200517 02:28:45.556" endtime="20200517 02:28:46.964"></status>
</kw>
<kw name="Set Focus To Element" library="SeleniumLibrary">
<doc>Sets the focus to the element identified by ``locator``.</doc>
<arguments>
<arg>${H2_NOME_DA_TV}</arg>
</arguments>
<status status="PASS" starttime="20200517 02:28:46.965" endtime="20200517 02:28:47.165"></status>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20200517 02:28:47.613" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-13.png"&gt;&lt;img src="selenium-screenshot-13.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20200517 02:28:47.165" endtime="20200517 02:28:47.613"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>${H2_NOME_DA_TV}</arg>
</arguments>
<msg timestamp="20200517 02:28:47.613" level="INFO">Clicking element '//ul[@class='neemu-products-container nm-view-type-grid five-products priceapi-finish']//h2[contains(text(),'Smart TV 4K OLED 77” LG OLED77C9PSB')]'.</msg>
<status status="PASS" starttime="20200517 02:28:47.613" endtime="20200517 02:28:49.177"></status>
</kw>
<status status="PASS" starttime="20200517 02:28:42.773" endtime="20200517 02:28:49.178"></status>
</kw>
<kw name="Então o produto o é adicionado e verificado que está no carrinho" library="setup_hz">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>${SPAN_ADICIONAR_AO_CARRINHO}</arg>
</arguments>
<status status="PASS" starttime="20200517 02:28:49.178" endtime="20200517 02:28:49.693"></status>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20200517 02:28:50.573" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-14.png"&gt;&lt;img src="selenium-screenshot-14.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20200517 02:28:49.693" endtime="20200517 02:28:50.573"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>${SPAN_ADICIONAR_AO_CARRINHO}</arg>
</arguments>
<msg timestamp="20200517 02:28:50.574" level="INFO">Clicking element '//div[@itemprop='offers']//button//span[contains(text(),'Adicionar à sacola')]'.</msg>
<status status="PASS" starttime="20200517 02:28:50.573" endtime="20200517 02:28:51.558"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>${A_BOTAO_VERDE_CONTINUAR}</arg>
</arguments>
<status status="PASS" starttime="20200517 02:28:51.559" endtime="20200517 02:28:51.775"></status>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20200517 02:28:52.220" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-15.png"&gt;&lt;img src="selenium-screenshot-15.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20200517 02:28:51.775" endtime="20200517 02:28:52.220"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>${A_BOTAO_VERDE_CONTINUAR}</arg>
</arguments>
<msg timestamp="20200517 02:28:52.221" level="INFO">Clicking element '//div[@class='warranty-wrapper']//a[contains(text(),'continuar')]'.</msg>
<status status="PASS" starttime="20200517 02:28:52.220" endtime="20200517 02:28:52.326"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>${P_NOME_DA_TV}</arg>
</arguments>
<status status="PASS" starttime="20200517 02:28:52.326" endtime="20200517 02:28:55.931"></status>
</kw>
<kw name="Title Should Be" library="SeleniumLibrary">
<doc>Verifies that the current page title equals ``title``.</doc>
<arguments>
<arg>Sacola de compras - Magazine Luiza</arg>
</arguments>
<msg timestamp="20200517 02:28:56.171" level="INFO">Page title is 'Sacola de compras - Magazine Luiza'.</msg>
<status status="PASS" starttime="20200517 02:28:55.931" endtime="20200517 02:28:56.171"></status>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<arguments>
<arg>${P_NOME_DA_TV}</arg>
<arg>${NOME_DA_TV}</arg>
</arguments>
<msg timestamp="20200517 02:28:56.172" level="INFO">Verifying element '//p[contains(text(),'Smart TV 4K OLED 77” LG OLED77C9PSB Wi-Fi - Bluetooth HDR Inteligência Artificial 4 HDMI 3 USB ')]' contains exact text 'Smart TV 4K OLED 77” LG OLED77C9PSB Wi-Fi - Bluetooth HDR Inteligência Artificial 4 HDMI 3 USB'.</msg>
<status status="PASS" starttime="20200517 02:28:56.171" endtime="20200517 02:28:56.312"></status>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20200517 02:28:56.775" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-16.png"&gt;&lt;img src="selenium-screenshot-16.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20200517 02:28:56.312" endtime="20200517 02:28:56.775"></status>
</kw>
<status status="PASS" starttime="20200517 02:28:49.178" endtime="20200517 02:28:56.775"></status>
</kw>
<status status="PASS" starttime="20200517 02:28:40.556" endtime="20200517 02:28:56.775"></status>
</kw>
<kw name="End Test" library="base" type="teardown">
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20200517 02:28:57.190" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-17.png"&gt;&lt;img src="selenium-screenshot-17.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20200517 02:28:56.776" endtime="20200517 02:28:57.190"></status>
</kw>
<status status="PASS" starttime="20200517 02:28:56.776" endtime="20200517 02:28:57.190"></status>
</kw>
<status status="PASS" starttime="20200517 02:28:40.554" endtime="20200517 02:28:57.191" critical="yes"></status>
</test>
<kw name="End Session" library="base" type="teardown">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20200517 02:28:57.193" endtime="20200517 02:28:59.379"></status>
</kw>
<status status="PASS" starttime="20200517 02:28:57.193" endtime="20200517 02:28:59.379"></status>
</kw>
<doc>ZUP - AUTOMAÇÃO WEB
Utilizando as ferramentas que preferir crie um teste automatizado que faça o fluxo de ponta
a ponta de um cliente que:
1- Entre em um grande portal de comércio online
(Exemplo: Americanas, Submarino, Magazine Luiza)
2- Faça uma busca por um produto
3- Valide o retorno da busca
4- Escolha um produto na lista
5- Adicione o carrinho
6- Valide o produto no carrinho
Para a criação dos cenários de testes devem ser considerados casos de sucesso e fluxos
alternativos</doc>
<status status="PASS" starttime="20200517 02:28:39.042" endtime="20200517 02:28:59.379"></status>
</suite>
<status status="PASS" starttime="20200517 02:28:39.012" endtime="20200517 02:28:59.385"></status>
</suite>
<statistics>
<total>
<stat pass="1" fail="0">Critical Tests</stat>
<stat pass="1" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="1" fail="0" id="s1" name="Tests">Tests</stat>
<stat pass="1" fail="0" id="s1-s1" name="ZUP">Tests.ZUP</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
